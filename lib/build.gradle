/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java-library'
    id 'maven-publish'
}

group = 'me.sonam'
version = '1.0.5-SNAPSHOT'
description = 'token-filter'
java.sourceCompatibility = JavaVersion.VERSION_21

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}
ext {
    set('springCloudVersion', "2024.0.0")
}

bootJar {
    enabled = false
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    api 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    testImplementation 'io.r2dbc:r2dbc-postgresql:0.8.13.RELEASE'
    testImplementation 'org.postgresql:postgresql:42.5.4'
    testImplementation 'io.r2dbc:r2dbc-h2:1.0.0.RELEASE'
    testImplementation 'com.h2database:h2:2.1.214'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.jsonwebtoken:jjwt:0.9.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.squareup.okhttp3:okhttp:4.0.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    testImplementation 'org.projectlombok:lombok:1.18.20'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

tasks.named('test', Test) {
    useJUnitPlatform()

    maxHeapSize = '1G'

    testLogging {
        events "passed", "skipped", "failed" // Log specific events
        exceptionFormat "full" // Print full exception stacktrace
        showStandardStreams = true // Print standard output and error
    }
}

test {
    filter {
        //include all tests from package
        includeTestsMatching "me.sonam.security"

        //include all integration tests
        includeTestsMatching "*Test*"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/sonamsamdupkhangsar/token-filter"
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("PERSONAL_ACCESS_TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId 'me.sonam'
            artifactId 'token-filter'
            version '1.0.6-SNAPSHOT'

            from components.java
        }
    }
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-group': project.group
        )
    }
}
